name: Auto Combine Common & Special Files
on:
  push:
    branches:
      - main  # 监听main分支的push事件
    paths:
      - 'common/**'  # 监听common目录下的所有文件变更
      - 'special/**' # 监听special目录下的所有文件变更

jobs:
  combine:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：拉取最新代码
      - name: Checkout Code
        uses: actions/checkout@v4

      # 步骤2：设置环境变量（定义目录/文件路径）
      - name: Set Environment Variables
        id: env-setup
        run: |
          # 通用文件路径（假设common目录下只有1个文件）
          COMMON_FILE=$(find ./common -type f -maxdepth 1)
          if [ -z "$COMMON_FILE" ]; then
            echo "❌ Error: No common file found in ./common directory!"
            exit 1
          fi
          # 提取通用文件名（不含路径和扩展名）
          COMMON_FILENAME=$(basename "$COMMON_FILE" .txt)  # 若通用文件是.md，改为.md
          # 特殊文件目录
          SPECIAL_DIR="./special"
          # 输出目录（拼接后的文件存放位置）
          OUTPUT_DIR="./output"
          # 创建输出目录（若不存在）
          mkdir -p "$OUTPUT_DIR"
          # 导出变量到环境（供后续步骤使用）
          echo "COMMON_FILE=$COMMON_FILE" >> $GITHUB_ENV
          echo "COMMON_FILENAME=$COMMON_FILENAME" >> $GITHUB_ENV
          echo "SPECIAL_DIR=$SPECIAL_DIR" >> $GITHUB_ENV
          echo "OUTPUT_DIR=$OUTPUT_DIR" >> $GITHUB_ENV

      # 步骤3：拼接文件（核心逻辑）
      - name: Combine Common & Special Files
        run: |
          # 清空输出目录（处理特殊文件删除的情况）
          rm -rf "$OUTPUT_DIR"/*
          # 遍历所有特殊文件（仅处理一级目录下的文件）
          for SPECIAL_FILE in "$SPECIAL_DIR"/*; do
            if [ -f "$SPECIAL_FILE" ]; then
              # 提取特殊文件名（不含路径和扩展名）
              SPECIAL_FILENAME=$(basename "$SPECIAL_FILE" .txt)  # 若特殊文件是.md，改为.md
              # 生成输出文件名（格式：通用文件名-特殊文件名.扩展名）
              OUTPUT_FILE="$OUTPUT_DIR/$COMMON_FILENAME-$SPECIAL_FILENAME.txt"
              # 拼接通用文件与特殊文件的内容（通用在前，特殊在后）
              cat "$COMMON_FILE" "$SPECIAL_FILE" > "$OUTPUT_FILE"
              echo "✅ Generated: $OUTPUT_FILE"
            fi
          done

      # 步骤4：自动提交生成的文件
      - name: Commit & Push Changes
        uses: EndBug/add-and-commit@v9  # 简化提交的动作（推荐）
        with:
          add: '$OUTPUT_DIR/**'  # 提交输出目录下的所有文件
          message: 'Auto-update combined files (${{ github.sha }})'  # 提交信息（包含 commit SHA）
          committer_name: 'GitHub Actions Bot'  # 提交者名称（可自定义）
          committer_email: 'actions@github.com'  # 提交者邮箱（可自定义）
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 自动获取的Token（无需手动配置）
